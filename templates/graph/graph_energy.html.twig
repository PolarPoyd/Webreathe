{% block body %}
    <canvas id="temperatureChart" width="300" height="150"></canvas>

    <script>
        var temperatureData = [];
        var dateLabels = [];

        {# Définit le nombre d'entrées à afficher #}
        {% set num_entries_to_display = 5 %}
        {# Récupère les dernières entrées (basées sur num_entries_to_display) et les inverse pour les avoir dans l'ordre chronologique #}
        {% set reversed_data = module.moduleData|slice(-num_entries_to_display)|reverse %}
        {# Boucle à travers les données inversées pour les traiter #}
        {% for moduleData in reversed_data %}
            {# Ajoute la température au début du tableau temperatureData (unshift ajoute à l'index 0) #}
            temperatureData.unshift({{ moduleData.temperature }}); 
            {# Convertit la chaîne de temps en objet Date et formate l'heure et les minutes #}
            var timestamp = new Date('{{ moduleData.createdAt|date('Y-m-d H:i:s') }}');
            var formattedTimestamp = 'à ' + timestamp.getHours() + 'h' + timestamp.getMinutes();
            {# Ajoute le timestamp formaté au début du tableau dateLabels #}
            dateLabels.unshift(formattedTimestamp);
        {% endfor %}

        var ctx = document.getElementById('temperatureChart').getContext('2d');
        var temperatureChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dateLabels,
                datasets: [{
                    label: 'Température par minute en °C', 
                    data: temperatureData,
                    borderColor: '#0a66dd',
                    backgroundColor: '#6fa2e9',
                    borderWidth: 1,
                    fill: true,
                    tension: 0.1,
                    pointRadius: 7,
                    pointStyle: 'rectRounded',
                }]
            },
            options: {
                responsive: true,
                elements: {
                    point: {
                        pointBorderColor: "#0a66dd",
                        pointBackgroundColor: "#0a66dd",
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true, 
                        max: 35, 
                        ticks: {
                            stepSize: 5, // Définit l'intervalle entre les étiquettes
                            callback: function(value, index, values) {
                                return value + ' °C'; // Ajoutez le symbole degré Celsius
                            }
                        }
                    }
                }
            }
        });
    </script>
{% endblock %}
